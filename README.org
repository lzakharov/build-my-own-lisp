* Build My Own Lisp
  Learning C and building my own programming language with the book
  [[http://www.buildyourownlisp.com]["Build Your Own Lisp"]].
 
** Building
   Just run:
   #+BEGIN_SRC shell 
   make
   #+END_SRC
   
** Running
   After building type:
   #+BEGIN_SRC shell
   ./lispy
   #+END_SRC
   
** Examples
   Arithmetic operations:
   #+BEGIN_SRC
   lispy> + (* 2 (- 1 3) (/ 4 2)) 
   -8
   #+END_SRC

   List functions:
   #+BEGIN_SRC 
   lispy> eval (head (tail (join {1 2} (list 3 4 5))))
   2
   #+END_SRC
   
   Variable functions:
   #+BEGIN_SRC 
   lispy> def {x z} 123 -321
   ()
   lispy> x
   123
   lispy> y
   -321
   lispy> = {x} 1
   ()
   lispy> x
   1
   #+END_SRC
   
   Lambda functions:
   #+BEGIN_SRC 
   lispy> \ {x y} {+ x y}
   (\ {x y} {+ x y})
   #+END_SRC
   
   Functions defenition:
   #+BEGIN_SRC 
   lispy> fun {curry f xs} {eval (join (list f) xs)}
   ()
   lispy> curry + {5 6 7}
   18
   #+END_SRC
   
   Comparison operations and ~If~ statements:
   #+BEGIN_SRC 
   lispy> > 3 1
   1
   lispy> def {x y} 100 200
   ()
   lispy> if (== x y) {+ x y} {- x y}
   -100
   #+END_SRC
   
   Get local environment:
   #+BEGIN_SRC
   lispy> locals {}
   {{+ <builtin>} {- <builtin>} {* <builtin>} {/ <builtin>} {if
   <builtin>} {> <builtin>} {>= <builtin>} {< <builtin>} {<= <builtin>}
   {== <builtin>} {!= <builtin>} {list <builtin>} {head <builtin>} {tail
   <builtin>} {eval <builtin>} {join <builtin>} {def <builtin>} {\
   <builtin>} {fun <builtin>} {= <builtin>} {locals <builtin>} {exit
   <builtin>}}
   #+END_SRC
   
   Exit function (or use ~Ctrl+C~):
   #+BEGIN_SRC 
   lispy> exit {}
   #+END_SRC


** Progress
   - [X] Chapter 1 • Introduction
   - [X] Chapter 2 • Installation
   - [X] Chapter 3 • Basics
   - [X] Chapter 4 • An Interactive Prompt
   - [X] Chapter 5 • Languages
   - [X] Chapter 6 • Parsing
   - [X] Chapter 7 • Evaluation
   - [X] Chapter 8 • Error Handling
   - [X] Chapter 9 • S-Expressions
   - [X] Chapter 10 • Q-Expressions
   - [X] Chapter 11 • Variables
   - [X] Chapter 12 • Functions
   - [ ] Chapter 13 • Conditionals
   - [ ] Chapter 14 • Strings
   - [ ] Chapter 15 • Standard Library
   - [ ] Chapter 16 • Bonus Projects

